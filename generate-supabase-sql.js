const fs = require('fs');

// –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON —Ñ–∞–π–ª–æ–≤
const groups = JSON.parse(fs.readFileSync('groups.json', 'utf8'));
const subjects = JSON.parse(fs.readFileSync('subjects.json', 'utf8'));
const teachers = JSON.parse(fs.readFileSync('teachers.json', 'utf8'));
const assistants = JSON.parse(fs.readFileSync('assistants.json', 'utf8'));
const rooms = JSON.parse(fs.readFileSync('rooms.json', 'utf8'));
const lessons = JSON.parse(fs.readFileSync('lessons.json', 'utf8'));

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫
function escapeString(str) {
  if (str === null || str === undefined) return 'NULL';
  return `'${str.toString().replace(/'/g, "''")}'`;
}

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SQL –¥–ª—è –≥—Ä—É–ø–ø
function generateGroupsSQL() {
  let sql = '-- –í—Å—Ç–∞–≤–∫–∞ –≥—Ä—É–ø–ø\nINSERT INTO groups (id, name, display_order) VALUES\n';
  const values = groups.map(group => 
    `(${escapeString(group.id)}, ${escapeString(group.name)}, ${group.display_order || 0})`
  ).join(',\n');
  
  sql += values + '\nON CONFLICT (id) DO UPDATE SET\n';
  sql += '  name = EXCLUDED.name,\n';
  sql += '  display_order = EXCLUDED.display_order,\n';
  sql += '  updated_at = NOW();\n\n';
  
  return sql;
}

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SQL –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤
function generateSubjectsSQL() {
  let sql = '-- –í—Å—Ç–∞–≤–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤\nINSERT INTO subjects (id, name, color) VALUES\n';
  const values = subjects.map(subject => 
    `(${escapeString(subject.id)}, ${escapeString(subject.name)}, ${escapeString(subject.color || '#667eea')})`
  ).join(',\n');
  
  sql += values + '\nON CONFLICT (id) DO UPDATE SET\n';
  sql += '  name = EXCLUDED.name,\n';
  sql += '  color = EXCLUDED.color,\n';
  sql += '  updated_at = NOW();\n\n';
  
  return sql;
}

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SQL –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
function generateTeachersSQL() {
  let sql = '-- –í—Å—Ç–∞–≤–∫–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π\nINSERT INTO teachers (id, name) VALUES\n';
  const values = teachers.map(teacher => 
    `(${escapeString(teacher.id)}, ${escapeString(teacher.name)})`
  ).join(',\n');
  
  sql += values + '\nON CONFLICT (id) DO UPDATE SET\n';
  sql += '  name = EXCLUDED.name,\n';
  sql += '  updated_at = NOW();\n\n';
  
  return sql;
}

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SQL –¥–ª—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤
function generateAssistantsSQL() {
  let sql = '-- –í—Å—Ç–∞–≤–∫–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤\nINSERT INTO assistants (id, name) VALUES\n';
  const values = assistants.map(assistant => 
    `(${escapeString(assistant.id)}, ${escapeString(assistant.name)})`
  ).join(',\n');
  
  sql += values + '\nON CONFLICT (id) DO UPDATE SET\n';
  sql += '  name = EXCLUDED.name,\n';
  sql += '  updated_at = NOW();\n\n';
  
  return sql;
}

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SQL –¥–ª—è –∞—É–¥–∏—Ç–æ—Ä–∏–π
function generateRoomsSQL() {
  let sql = '-- –í—Å—Ç–∞–≤–∫–∞ –∞—É–¥–∏—Ç–æ—Ä–∏–π\nINSERT INTO rooms (id, name) VALUES\n';
  const values = rooms.map(room => 
    `(${escapeString(room.id)}, ${escapeString(room.name)})`
  ).join(',\n');
  
  sql += values + '\nON CONFLICT (id) DO UPDATE SET\n';
  sql += '  name = EXCLUDED.name,\n';
  sql += '  updated_at = NOW();\n\n';
  
  return sql;
}

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º SQL –¥–ª—è —É—Ä–æ–∫–æ–≤
function generateLessonsSQL() {
  let sql = '-- –í—Å—Ç–∞–≤–∫–∞ —É—Ä–æ–∫–æ–≤\nINSERT INTO lessons (id, group_id, time_slot, subject_id, teacher_id, assistant_id, room_id, duration, color, comment) VALUES\n';
  const values = lessons.map(lesson => 
    `(${escapeString(lesson.id)}, ${escapeString(lesson.group_id)}, ${escapeString(lesson.time_slot)}, ${escapeString(lesson.subject_id)}, ${escapeString(lesson.teacher_id)}, ${escapeString(lesson.assistant_id)}, ${escapeString(lesson.room_id)}, ${lesson.duration || 45}, ${escapeString(lesson.color)}, ${escapeString(lesson.comment)})`
  ).join(',\n');
  
  sql += values + '\nON CONFLICT (id) DO UPDATE SET\n';
  sql += '  group_id = EXCLUDED.group_id,\n';
  sql += '  time_slot = EXCLUDED.time_slot,\n';
  sql += '  subject_id = EXCLUDED.subject_id,\n';
  sql += '  teacher_id = EXCLUDED.teacher_id,\n';
  sql += '  assistant_id = EXCLUDED.assistant_id,\n';
  sql += '  room_id = EXCLUDED.room_id,\n';
  sql += '  duration = EXCLUDED.duration,\n';
  sql += '  color = EXCLUDED.color,\n';
  sql += '  comment = EXCLUDED.comment,\n';
  sql += '  updated_at = NOW();\n\n';
  
  return sql;
}

// –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—ã–π SQL —Å–∫—Ä–∏–ø—Ç
let fullSQL = `-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π SQL —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Supabase
-- –°–æ–∑–¥–∞–Ω: ${new Date().toISOString()}
-- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: ${groups.length} –≥—Ä—É–ø–ø, ${subjects.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤, ${teachers.length} –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π, ${assistants.length} –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤, ${rooms.length} –∞—É–¥–∏—Ç–æ—Ä–∏–π, ${lessons.length} —É—Ä–æ–∫–æ–≤

`;

fullSQL += generateGroupsSQL();
fullSQL += generateSubjectsSQL();
fullSQL += generateTeachersSQL();
fullSQL += generateAssistantsSQL();
fullSQL += generateRoomsSQL();
fullSQL += generateLessonsSQL();

// –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Ñ–∞–π–ª
fs.writeFileSync('supabase-full-data.sql', fullSQL);

console.log('‚úÖ SQL —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω: supabase-full-data.sql');
console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö:`);
console.log(`   - –ì—Ä—É–ø–ø—ã: ${groups.length}`);
console.log(`   - –ü—Ä–µ–¥–º–µ—Ç—ã: ${subjects.length}`);
console.log(`   - –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏: ${teachers.length}`);
console.log(`   - –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã: ${assistants.length}`);
console.log(`   - –ê—É–¥–∏—Ç–æ—Ä–∏–∏: ${rooms.length}`);
console.log(`   - –£—Ä–æ–∫–∏: ${lessons.length}`);
