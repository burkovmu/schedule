import React from 'react';
import { ConflictInfo } from '../utils/scheduleUtils';

interface ConflictDialogProps {
  conflicts: ConflictInfo[];
  onClose: () => void;
  onContinue?: () => void;
}

const ConflictDialog: React.FC<ConflictDialogProps> = ({ conflicts, onClose, onContinue }) => {
  const getConflictIcon = (type: string) => {
    switch (type) {
      case 'teacher': return 'üë®‚Äçüè´';
      case 'room': return 'üè¢';
      case 'group': return 'üë•';
      default: return '‚ö†Ô∏è';
    }
  };

  const getConflictColor = (type: string) => {
    switch (type) {
      case 'teacher': return '#ff9500';
      case 'room': return '#ff3b30';
      case 'group': return '#007aff';
      default: return '#8e8e93';
    }
  };

  return (
    <div className="modal-overlay" onClick={onClose}>
      <div className="modal-content conflict-dialog" onClick={(e) => e.stopPropagation()}>
        <div className="modal-header">
          <h2>‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏</h2>
          <button className="modal-close" onClick={onClose}>√ó</button>
        </div>
        
        <div className="conflict-content">
          <p className="conflict-intro">
            –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å/–ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å —É—Ä–æ–∫ –∏–∑-–∑–∞ —Å–ª–µ–¥—É—é—â–∏—Ö –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤:
          </p>
          
          <div className="conflicts-list">
            {conflicts.map((conflict, index) => (
              <div key={index} className="conflict-item">
                <div 
                  className="conflict-icon"
                  style={{ color: getConflictColor(conflict.type) }}
                >
                  {getConflictIcon(conflict.type)}
                </div>
                <div className="conflict-details">
                  <div className="conflict-type">
                    {conflict.type === 'teacher' && '–ö–æ–Ω—Ñ–ª–∏–∫—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è'}
                    {conflict.type === 'room' && '–ö–æ–Ω—Ñ–ª–∏–∫—Ç –∞—É–¥–∏—Ç–æ—Ä–∏–∏'}
                    {conflict.type === 'group' && '–ö–æ–Ω—Ñ–ª–∏–∫—Ç –≥—Ä—É–ø–ø—ã'}
                  </div>
                  <div className="conflict-message">
                    {conflict.message}
                  </div>
                  <div className="conflict-lesson-info">
                    <strong>–ö–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–π —É—Ä–æ–∫:</strong> {conflict.conflictingLesson.subject_name} 
                    –≤ {conflict.conflictingLesson.room_name} 
                    —Å {conflict.conflictingLesson.teacher_name}
                  </div>
                </div>
              </div>
            ))}
          </div>
          
          <div className="conflict-suggestions">
            <h3>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</h3>
            <ul>
              <li>–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è –¥–ª—è —É—Ä–æ–∫–∞</li>
              <li>–ù–∞–∑–Ω–∞—á—å—Ç–µ –¥—Ä—É–≥–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</li>
              <li>–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é</li>
              <li>–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–π —É—Ä–æ–∫</li>
            </ul>
          </div>
        </div>
        
        <div className="form-actions">
          <button type="button" onClick={onClose} className="btn-primary">
            –ü–æ–Ω—è—Ç–Ω–æ
          </button>
          {onContinue && (
            <button type="button" onClick={onContinue} className="btn-secondary">
              –°–æ–∑–¥–∞—Ç—å –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã
            </button>
          )}
        </div>
      </div>
    </div>
  );
};

export default ConflictDialog;
